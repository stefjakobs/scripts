#!/bin/bash

# global variables
interval=60
clientconfdir='/etc/burp/clientconfdir/'
backupdir='/srv/backup/burp/'
HOSTNAME='john.fritz.box'
declare -A jobs_last_backup
declare -A jobs_last_run
declare -A stats_new
declare -A stats_changed
declare -A stats_unchanged
declare -A stats_deleted
declare -A stats_total
declare -A stats_scanned
declare -A stats_warnings
declare -A stats_time_taken
declare -A stats_bytes_estimated
declare -A stats_bytes_in_backup
declare -A stats_bytes_received

if ! [ -x "$backupdir" ]; then
  echo "error: can not read $backupdir"
  exit 1
fi

while true; do
  now="$(date +%s)"
  clients="$(find $clientconfdir -maxdepth 1 -type f -printf '%f\n')"
  clients_count="$(echo "$clients" | wc -l)"
  
  for job in $clients; do
    if [ -r ${backupdir}/${job}/current/log.gz ]; then
      while read line; do
        if [[ $line =~ Grand\ total: ]]; then
          stats_new[$job]=$(echo "$line" | awk '{ print $3 }')
          stats_changed[$job]=$(echo "$line" | awk '{ print $4 }')
          stats_unchanged[$job]=$(echo "$line" | awk '{ print $5 }')
          stats_deleted[$job]=$(echo "$line" | awk '{ print $6 }')
          stats_total[$job]=$(echo "$line" | awk '{ print $7 }')
          stats_scanned[$job]=$(echo "$line" | awk '{ print $9 }')
        elif [[ $line =~ Time\ taken: ]]; then
          min=$(echo "$line" | awk '{ print $3 }' | cut -d':' -f1)
          sec=$(echo "$line" | awk '{ print $3 }' | cut -d':' -f2)
          let stats_time_taken[$job]=${min#0}*60+${sec#0}
        elif [[ $line =~ Warnings: ]]; then
          stats_warnings[$job]=$(echo "$line" | awk '{ print $2 }')
        elif [[ $line =~ Bytes\ estimated: ]]; then
          stats_bytes_estimated[$job]=$(echo "$line" | awk '{ print $3 }')
        elif [[ $line =~ Bytes\ in\ backup: ]]; then
          stats_bytes_in_backup[$job]=$(echo "$line" | awk '{ print $4 }')
        elif [[ $line =~ Bytes\ received: ]]; then
          stats_bytes_received[$job]=$(echo "$line" | awk '{ print $3 }')
        elif [[ $line =~ End\ time: ]]; then
          last_run[$job]=$(date -d "$(echo "$line" | awk '{ print $3 " " $4 }')" +%s)
        fi
      done <<< "$(zcat ${backupdir}/${job}/current/log.gz | grep -v ': burp\[[0-9]*\] ')"
    fi
  done
  
  stats_new=0
  stats_changed=0
  stats_unchanged=0
  stats_deleted=0
  stats_total=0
  stats_scanned=0
  stats_time_taken=0
  stats_warnings=0
  stats_bytes_estimated=0
  stats_bytes_in_backup=0
  stats_bytes_received=0
  
  for job in $clients; do
    #if (( $now - ${last_run[$job]} < $interval )); then
    if (( $now - ${last_run[$job]:-0} < ${stats_time_taken[$job]:-$interval} )); then
      let "stats_new +=  ${stats_new[$job]}"
      let "stats_changed += ${stats_changed[$job]}"
      let "stats_unchanged += ${stats_unchanged[$job]}"
      let "stats_deleted += ${stats_deleted[$job]}"
      let "stats_total += ${stats_total[$job]}"
      let "stats_scanned += ${stats_scanned[$job]}"
      let "stats_time_taken += ${stats_time_taken[$job]}"
      let "stats_warnings += ${stats_warnings[$job]}"
      let "stats_bytes_estimated += ${stats_bytes_estimated[$job]}"
      let "stats_bytes_in_backup += ${stats_bytes_in_backup[$job]}"
      let "stats_bytes_received += ${stats_bytes_received[$job]}"
    fi
  done

  echo "PUTVAL \"${HOSTNAME}/burp/files-files_new\" interval=${interval} N:${stats_new}"
  echo "PUTVAL \"${HOSTNAME}/burp/files-files_changed\" interval=${interval} N:${stats_changed}"
  echo "PUTVAL \"${HOSTNAME}/burp/files-files_unchanged\" interval=${interval} N:${stats_unchanged}"
  echo "PUTVAL \"${HOSTNAME}/burp/files-files_deleted\" interval=${interval} N:${stats_deleted}"
  echo "PUTVAL \"${HOSTNAME}/burp/files-files_total\" interval=${interval} N:${stats_total}"
  echo "PUTVAL \"${HOSTNAME}/burp/files-files_scanned\" interval=${interval} N:${stats_scanned}"
  echo "PUTVAL \"${HOSTNAME}/burp/duration-time_taken\" interval=${interval} N:${stats_time_taken}"
  echo "PUTVAL \"${HOSTNAME}/burp/gauge-warnings\" interval=${interval} N:${stats_warnings}"
  echo "PUTVAL \"${HOSTNAME}/burp/bytes-bytes_estimated\" interval=${interval} N:${stats_bytes_estimated}"
  echo "PUTVAL \"${HOSTNAME}/burp/bytes-bytes_in_backup\" interval=${interval} N:${stats_bytes_in_backup}"
  echo "PUTVAL \"${HOSTNAME}/burp/bytes-bytes_received\" interval=${interval} N:${stats_bytes_received}"

  echo "PUTVAL \"${HOSTNAME}/burp/users-clients\" interval=${interval} N:${clients_count}"

  sleep ${interval}

done

